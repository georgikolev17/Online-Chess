@page "/"
@using System.Threading;
@using WebApiTest.Classes;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
Welcome to your new app.

<h1>You must create your ID before start or join game</h1>
<button @onclick=@(() => ButtonNewGameClicked(playerId))>New Game</button>

<input type="text" id="join" @bind-value="GameCode" />


<div>@Counter</div>

<a href="/startgame">
    <button @onclick=@(() => ButtonJoinGameClicked(playerId, GameCode))>Join Game</button>
</a>

@functions {
    private HttpClient Http = new HttpClient();

    public string Msg { get; set; }

    public string GameCode { get; set; }

    public bool PlayerIsWhite { get; set; }

    public Game Game { get; set; }

    public string FromPosition { get; set; }

    public string ToPosition { get; set; }

    private string playerId = GeneratePlayerId();

    public int Counter { get; set; }

    [Inject]
    public NavigationManager NavManager { get; set; }

    static string GeneratePlayerId()
    {
        string playerID = Guid.NewGuid().ToString("N");
        return playerID;
    }

    protected override void OnInitialized()
    {
        sessionStorage.SetItemAsync("game", Game);
        var timer = new Timer(new TimerCallback(async _ =>
        {
            await UpdateGame();
            await this.InvokeAsync(() => this.StateHasChanged());
        }), null, 1000, 1000);
    }

    private async Task UpdateGame()
    {
        Counter++;
        if (this.GameCode != null)
        {
            this.Game = await Http.GetJsonAsync<Game>(
                NavManager.BaseUri + $"games/state?gameCode={this.GameCode}");
        }
    }

    public async Task ButtonNewGameClicked(string playerId)
    {
        Game game = await Http.GetJsonAsync<Game>(
            NavManager.BaseUri + $"games/new?playerId={playerId}");
        this.Msg = "Game created. Code = " + game.Code;
        this.PlayerIsWhite = true;
        this.GameCode = game.Code;
        this.Game = game;
    }

    public async Task ButtonJoinGameClicked(string playerId, string gameCode)
    {
        Game game = await Http.GetJsonAsync<Game>(
            NavManager.BaseUri + $"games/join?playerId={playerId}&gameCode={gameCode}");
        this.Msg = "Game joined. Code = " + gameCode;
        this.PlayerIsWhite = false;
        this.GameCode = game.Code;
    }

    public async Task ButtonMoveClicked()
    {
        await Http.GetJsonAsync<Game>(NavManager.BaseUri +
            $"games/move?playerId={this.playerId}&gameCode={this.GameCode}&fromPos={this.FromPosition}&toPos={this.ToPosition}");
    }
}

<div>
    @Msg
</div>
